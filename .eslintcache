[{"C:\\Users\\admin\\Desktop\\minigame\\src\\reportWebVitals.js":"1","C:\\Users\\admin\\Desktop\\minigame\\src\\App.js":"2"},{"size":362,"mtime":1610938527518,"results":"3","hashOfConfig":"4"},{"size":4129,"mtime":1612259933230,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ge1fpp",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\Desktop\\minigame\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\minigame\\src\\App.js",["10"],{"ruleId":"11","severity":1,"message":"12","line":29,"column":17,"nodeType":"13","endLine":32,"endColumn":26},"react-hooks/exhaustive-deps","Assignments to the 'timeout' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]